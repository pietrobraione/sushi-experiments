resolve begin

instanceof ganttproject/Task expands to instanceof ganttproject/TaskImpl;
{R_ANY}.ganttproject/ImplicitInheritedDependency:myExplicitDep instanceof ganttproject/DependencyEdge expands to instanceof ganttproject/ExplicitDependencyImpl;
{R_ANY}.ganttproject/Transaction:myTouchedNodes instanceof java/util/Set expands to instanceof common/LinkedList;
{R_ANY}.ganttproject/Node:myData(.ganttproject/NodeData:myIncoming|.ganttproject/NodeData:myOutgoing).common/LinkedList:header(.common/LinkedList$Entry:next|.common/LinkedList$Entry:previous)+.common/LinkedList$Entry:element instanceof java/lang/Object expands to instanceof ganttproject/ExplicitDependencyImpl; 
{R_ANY}.ganttproject/Node:myData(.ganttproject/NodeData:myIncoming|.ganttproject/NodeData:myOutgoing).common/LinkedList:header(.common/LinkedList$Entry:next|.common/LinkedList$Entry:previous)+.common/LinkedList$Entry:element instanceof java/lang/Object expands to instanceof ganttproject/ImplicitInheritedDependency; 
{R_ANY}.ganttproject/Node:myData(.ganttproject/NodeData:myIncoming|.ganttproject/NodeData:myOutgoing).common/LinkedList:header(.common/LinkedList$Entry:next|.common/LinkedList$Entry:previous)+.common/LinkedList$Entry:element instanceof java/lang/Object expands to instanceof ganttproject/ImplicitSubSuperTaskDependency;

-- for all the entries e, e.element is not an entry
{R_ANY}.common/LinkedList:header(.common/LinkedList$Entry:next|.common/LinkedList$Entry:previous)*.common/LinkedList$Entry:element instanceof java/lang/Object aliases target {ROOT}:(?!{°}*common/LinkedList:header(.common/LinkedList$Entry:next|.common/LinkedList$Entry:previous)*{EOL}){°}*;
resolve end
