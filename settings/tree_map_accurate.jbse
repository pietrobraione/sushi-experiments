resolve begin

-- parameter value and field Entry.value are both distinct objects or null, or alias of each other 
{ROOT}:value instanceof java/lang/Object aliases target {ROOT}:this.treemap/TreeMap:root(.treemap/TreeMap$Entry:left|.treemap/TreeMap$Entry:right)*.treemap/TreeMap$Entry:value;
{ROOT}:this.treemap/TreeMap:root(.treemap/TreeMap$Entry:left|.treemap/TreeMap$Entry:right)*.treemap/TreeMap$Entry:value instanceof java/lang/Object aliases target {ROOT}:value;

------------------------------------------------- 
{ROOT}:this.treemap/TreeMap:root(.treemap/TreeMap$Entry:left|.treemap/TreeMap$Entry:right)* instanceof treemap/TreeMap$Entry aliases nothing;
{ROOT}:this.treemap/TreeMap:root(.treemap/TreeMap$Entry:left|.treemap/TreeMap$Entry:right)*.treemap/TreeMap$Entry:right instanceof treemap/TreeMap$Entry expands to instanceof treemap/TreeMap$Entry triggers treemap/TreeMap$Entry$HEXTriggers:(Ltreemap/TreeMap$Entry;)V:_got_TreeMap_RightEntry:{$REF};
{ROOT}:this.treemap/TreeMap:root(.treemap/TreeMap$Entry:left|.treemap/TreeMap$Entry:right)*.treemap/TreeMap$Entry:left instanceof treemap/TreeMap$Entry expands to instanceof treemap/TreeMap$Entry triggers treemap/TreeMap$Entry$HEXTriggers:(Ltreemap/TreeMap$Entry;)V:_got_TreeMap_LeftEntry:{$REF};
{ROOT}:this.treemap/TreeMap:root instanceof treemap/TreeMap$Entry expands to instanceof treemap/TreeMap$Entry triggers treemap/TreeMap$Entry$HEXTriggers:(Ltreemap/TreeMap$Entry;)V:_got_TreeMap_RootEntry:{$REF};
{ROOT}:this.treemap/TreeMap:root(.treemap/TreeMap$Entry:left|.treemap/TreeMap$Entry:right)+ instanceof treemap/TreeMap$Entry null triggers treemap/TreeMap$Entry$HEXTriggers:(Ltreemap/TreeMap$Entry;)V:_handlePathClosure:{$REF}.{UP};

{ROOT}:this.root instanceof treemap/TreeMap$Entry null triggers treemap/TreeMap$HEXTriggers:(Ltreemap/TreeMap;)V:_handleNullRoot:{$REF}.{UP};

-- TreeMap.Entry.wellConnected
{ROOT}:this.treemap/TreeMap:root.treemap/TreeMap$Entry:parent instanceof treemap/TreeMap$Entry expands to nothing;
{ROOT}:this.treemap/TreeMap:root.treemap/TreeMap$Entry:parent instanceof treemap/TreeMap$Entry aliases nothing;
{ROOT}:this.treemap/TreeMap:root(.treemap/TreeMap$Entry:left|.treemap/TreeMap$Entry:right)+.treemap/TreeMap$Entry:parent instanceof treemap/TreeMap$Entry not null;
{ROOT}:this.treemap/TreeMap:root(.treemap/TreeMap$Entry:left|.treemap/TreeMap$Entry:right)+.treemap/TreeMap$Entry:parent instanceof treemap/TreeMap$Entry expands to nothing;
{ROOT}:this.treemap/TreeMap:root(.treemap/TreeMap$Entry:left|.treemap/TreeMap$Entry:right)+.treemap/TreeMap$Entry:parent instanceof treemap/TreeMap$Entry aliases target {$REF}.{UP}.{UP};

-- all the entries in a TreeMap refer their owner (ghost field)
{ROOT}:this.treemap/TreeMap:root(.treemap/TreeMap$Entry:left|.treemap/TreeMap$Entry:right)*.treemap/TreeMap$Entry:_owner instanceof treemap/TreeMap not null;
{ROOT}:this.treemap/TreeMap:root(.treemap/TreeMap$Entry:left|.treemap/TreeMap$Entry:right)*.treemap/TreeMap$Entry:_owner instanceof treemap/TreeMap expands to nothing;
{ROOT}:this.treemap/TreeMap:root(.treemap/TreeMap$Entry:left|.treemap/TreeMap$Entry:right)*.treemap/TreeMap$Entry:_owner instanceof treemap/TreeMap aliases target {ROOT}:this;
resolve end

trigger begin
instanceof treemap/TreeMap expands to instanceof treemap/TreeMap triggers treemap/TreeMap$HEXTriggers:(Ltreemap/TreeMap;)V:_got_TreeMap:{$REF};
trigger end